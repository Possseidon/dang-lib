# Taken and modified from here:
# https://github.com/lukka/CppBuildTasks-Validation/blob/master/.github/workflows/hosted-pure-workflow.yml

name: Run build and tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  job:
    name: ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux

    env:
      CMAKE_BUILD_DIR: ${{github.workspace}}/build/
      VCPKG_ROOT: ${{github.workspace}}/vcpkg

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install CMake and Ninja
        uses: lukka/get-cmake@latest

      - name: Restore vcpkg and its artifacts
        uses: actions/cache@v2
        with:
          # The first path is where vcpkg generates artifacts while consuming the vcpkg.json manifest file.
          # The second path is the location of vcpkg (it contains the vcpkg executable and data files).
          # The other paths starting with '!' are exclusions: they contain temporary files generated during the build of the installed packages.
          path: |
            ${{env.CMAKE_BUILD_DIR}}/vcpkg_installed/
            ${{env.VCPKG_ROOT}}
            !${{env.VCPKG_ROOT}}/buildtrees
            !${{env.VCPKG_ROOT}}/packages
            !${{env.VCPKG_ROOT}}/downloads
          # The key is composed in a way that it gets properly invalidated: this must happen whenever vcpkg's Git commit id changes, or the list of packages changes.
          # In this case a cache miss must happen and a new entry with a new key with be pushed to GitHub the cache service.
          # The key includes: hash of the vcpkg.json file, the hash of the vcpkg Git commit id, and the used vcpkg's triplet.
          # The vcpkg's commit id would suffice, but computing an hash out it does not harm.
          # Note: given a key, the cache content is immutable.
          # If a cache entry has been created improperly, in order the recreate the right content the key must be changed as well, and it must be brand new (i.e. not existing already).
          key: |
            ${{hashFiles('vcpkg.json')}}-${{hashFiles('.git/modules/vcpkg/HEAD')}}-${{matrix.triplet}}-invalidate

      - name: (Linux) Install required tools for glfw
        if: runner.os == 'Linux'
        run: sudo apt-get install libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev

      - name: (Windows) Ensure the Developer Command Prompt is setup correctly
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies and generate project files
        run: cmake -S "${{github.workspace}}" -B "${{env.CMAKE_BUILD_DIR}}" -GNinja -DCMAKE_TOOLCHAIN_FILE="${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake"

      - name: Build all
        run: cmake --build "${{env.CMAKE_BUILD_DIR}}"

      - name: Build dmath
        run: cmake --build "${{env.CMAKE_BUILD_DIR}}" --target dmath

      - name: Run tests
        run: |
          cd "${{env.CMAKE_BUILD_DIR}}"
          ctest
